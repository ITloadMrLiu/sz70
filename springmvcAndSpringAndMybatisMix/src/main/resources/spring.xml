<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!--导入外部配置文件-->
    <context:property-placeholder location="classpath:jdbcconfig.properties"/>
    <!--将数据源配置到spring的核心容器,将druid的DataSource配置到核心容器-->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!--spring整合mybatis-->
    <!--将SqlSessionFactory的对象配置到核心容器-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="druidDataSource"></property>
        <!--加载mybatis主配置文件-->
        <property name="configLocation" value="classpath:SqlMyconfig.xml"></property>
    </bean>
    <!--使用mapperScannerConfigurer代替maybatis主文件的包扫描,它会将扫描到的Dao接口的代理配置放到spring的核心容器-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--配置扫描Dao接口的包的对象-->
        <property name="basePackage" value="com.itheima.dao"></property>
    </bean>
    <!--配置一个事务管理者-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入DataSource-->
        <property name="dataSource" ref="druidDataSource"></property>
    </bean>
    <!--加载注解aop驱动-->
    <aop:aspectj-autoproxy/>
    <!--加载事务注解驱动-->
    <tx:annotation-driven/>
</beans>